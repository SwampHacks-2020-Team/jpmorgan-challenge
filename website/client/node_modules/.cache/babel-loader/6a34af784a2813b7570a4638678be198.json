{"ast":null,"code":"var _jsxFileName = \"/Users/carloscarrasquillo/Documents/Documents/code/hackathon/swamphacks_2020/website/client/src/components/EmergencyForm/EmergencyForm.js\";\nimport React, { Component } from \"react\";\nimport \"./EmergencyForm.css\";\n\nconst GetHelp = require('./GetHelp.js');\n/* Using Tutorial: https://www.youtube.com/watch?v=4CeTFW4agRw by Brice Ayres*/\n\n\nconst phoneRegex = RegExp(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/);\nconst partySizeRegex = RegExp(/^[1-9][0-9]?$/);\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state)) {\n        console.log('--Submitting--');\n        GetHelp.getHelp(this.state.name, this.state.partySize, this.state.phone, this.state.message);\n        this.setState({\n          success: true\n        });\n      } else {\n        console.error(\"Invalid Form\");\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n\n      switch (name) {\n        case \"name\":\n          formErrors.name = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        case \"partySize\":\n          formErrors.partySize = partySizeRegex.test(value) ? \"not a valid number of people\" : \"\";\n          break;\n\n        case \"phone\":\n          formErrors.phone = phoneRegex.test(value) ? \"\" : \"invalid phone number\";\n          break;\n\n        case \"message\":\n          formErrors.message = value.length < 10 ? \"minimum 10 characaters required\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      });\n    };\n\n    this.state = {\n      name: null,\n      phone: null,\n      partySize: null,\n      message: null,\n      formErrors: {\n        name: \"\",\n        partySize: \"\",\n        phone: \"\",\n        message: \"\"\n      },\n      success: false\n    };\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Let Us Help You.\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      className: formErrors.name.length > 0 ? \"error\" : null,\n      placeholder: \"Name\",\n      type: \"text\",\n      name: \"name\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), formErrors.name.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, formErrors.name)), React.createElement(\"div\", {\n      className: \"party-size\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"partySize\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(\"input\", {\n      className: formErrors.partySize.length > 0 ? \"error\" : null,\n      placeholder: \"Last Name\",\n      type: \"text\",\n      name: \"partySize\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), formErrors.partySize.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, formErrors.partySize)), React.createElement(\"div\", {\n      className: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Your Phone Number\"), React.createElement(\"input\", {\n      className: formErrors.phone.length > 0 ? \"error\" : null,\n      placeholder: \"(---) --- ---\",\n      type: \"phone\",\n      name: \"phone\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), formErrors.phone.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, formErrors.phone)), React.createElement(\"div\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Message\"), React.createElement(\"textarea\", {\n      className: formErrors.message.length > 0 ? \"error\" : null,\n      placeholder: \"Message\",\n      type: \"message\",\n      name: \"message\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), formErrors.message.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, formErrors.message)), React.createElement(\"div\", {\n      className: \"get-help\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: this.state.success,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, !this.state.success ? 'Get Help' : 'Submitted!'))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/carloscarrasquillo/Documents/Documents/code/hackathon/swamphacks_2020/website/client/src/components/EmergencyForm/EmergencyForm.js"],"names":["React","Component","GetHelp","require","phoneRegex","RegExp","partySizeRegex","formValid","formErrors","rest","valid","Object","values","forEach","val","length","App","constructor","props","handleSubmit","e","preventDefault","state","console","log","getHelp","name","partySize","phone","message","setState","success","error","handleChange","value","target","test","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./EmergencyForm.css\";\nconst GetHelp = require('./GetHelp.js');\n\n/* Using Tutorial: https://www.youtube.com/watch?v=4CeTFW4agRw by Brice Ayres*/\n\nconst phoneRegex = RegExp(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/);\nconst partySizeRegex = RegExp(/^[1-9][0-9]?$/);\n\nconst formValid = ({ formErrors, ...rest }) => {\n    let valid = true;\n    // validate form errors being empty\n    Object.values(formErrors).forEach(val => {\n      val.length > 0 && (valid = false);\n    });\n    // validate the form was filled out\n    Object.values(rest).forEach(val => {\n      val === null && (valid = false);\n    });\n    return valid;\n};\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  name:       null,\n                        phone:      null,\n                        partySize:  null,\n                        message:    null,\n                        formErrors: { name: \"\", partySize: \"\", phone: \"\", message: \"\" },\n                        success:    false\n                     };\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        if (formValid(this.state)) {\n            console.log('--Submitting--');\n            GetHelp.getHelp(this.state.name,\n                            this.state.partySize,\n                            this.state.phone, \n                            this.state.message)\n            this.setState({success: true});\n        }\n        else {\n          console.error(\"Invalid Form\");\n        }\n    };\n\n    handleChange = e => {\n        e.preventDefault();\n        const { name, value } = e.target;\n        let formErrors = { ...this.state.formErrors };\n\n        switch (name) {\n            case \"name\":\n                formErrors.name = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n            break;\n            case \"partySize\":\n                formErrors.partySize = partySizeRegex.test(value) ? \"not a valid number of people\" : \"\";\n            break;\n            case \"phone\":\n                formErrors.phone = phoneRegex.test(value) ? \"\" : \"invalid phone number\";\n            break;\n            case \"message\":\n                formErrors.message = value.length < 10 ? \"minimum 10 characaters required\" : \"\";\n            break;\n            default:\n            break;\n        }\n        this.setState({ formErrors, [name]: value });\n    };\n\n    render() {\n        const { formErrors } = this.state;\n        return (\n            <div className=\"form-wrapper\">\n                <h1>Let Us Help You.</h1>\n                <form onSubmit={this.handleSubmit} noValidate>\n\n                    <div className=\"name\">\n                        <label htmlFor=\"name\">Name</label>\n                        <input className={formErrors.name.length > 0 ? \"error\" : null}\n                               placeholder=\"Name\"\n                               type=\"text\"\n                               name=\"name\"\n                               noValidate\n                               onChange={this.handleChange}/>\n                        {formErrors.name.length > 0 && (\n                            <span className=\"errorMessage\">{formErrors.name}</span>\n                        )}\n                    </div>\n\n                    <div className=\"party-size\">\n                        <label htmlFor=\"partySize\">Last Name</label>\n                        <input className={formErrors.partySize.length > 0 ? \"error\" : null}\n                               placeholder=\"Last Name\"\n                               type=\"text\"\n                               name=\"partySize\"\n                               noValidate\n                               onChange={this.handleChange}/>\n                        {formErrors.partySize.length > 0 && (\n                            <span className=\"errorMessage\">{formErrors.partySize}</span>\n                        )}\n                    </div>\n\n                    <div className=\"phone\">\n                        <label htmlFor=\"phone\">Your Phone Number</label>\n                        <input className={formErrors.phone.length > 0 ? \"error\" : null}\n                               placeholder=\"(---) --- ---\"\n                               type=\"phone\"\n                               name=\"phone\"\n                               noValidate\n                               onChange={this.handleChange}/>\n                        {formErrors.phone.length > 0 && (\n                            <span className=\"errorMessage\">{formErrors.phone}</span>\n                        )}\n                    </div>\n\n                    <div className=\"message\">\n                        <label htmlFor=\"message\">Message</label>\n                        <textarea className={formErrors.message.length > 0 ? \"error\" : null}\n                               placeholder=\"Message\"\n                               type=\"message\"\n                               name=\"message\"\n                               noValidate\n                               onChange={this.handleChange}/>\n                        {formErrors.message.length > 0 && (\n                            <span className=\"errorMessage\">{formErrors.message}</span>\n                        )}\n                    </div>\n\n                    <div className=\"get-help\">\n                        <button type=\"submit\" disabled={this.state.success}>\n                            { !this.state.success ? 'Get Help' : 'Submitted!'}\n                        </button>\n                    </div>\n\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}