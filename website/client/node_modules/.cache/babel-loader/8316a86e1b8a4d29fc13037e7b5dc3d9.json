{"ast":null,"code":"var _jsxFileName = \"/Users/carloscarrasquillo/Documents/Documents/code/hackathon/swamphacks_2020/website/client/src/components/EmergencyForm/EmergencyForm.js\";\nimport React, { Component } from \"react\";\nimport \"./EmergencyForm.css\";\n/* Using Tutorial: https://www.youtube.com/watch?v=4CeTFW4agRw by Brice Ayres*/\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state)) {\n        console.log('--Submitting--');\n        SendEmail.sendEmail(this.state.firstName.concat(\" \", this.state.lastName), this.state.email, this.state.message);\n        this.setState({\n          success: true\n        });\n      } else {\n        console.error(\"Invalid Form\");\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n\n      switch (name) {\n        case \"firstName\":\n          formErrors.firstName = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        case \"lastName\":\n          formErrors.lastName = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        case \"email\":\n          formErrors.email = emailRegex.test(value) ? \"\" : \"invalid email address\";\n          break;\n\n        case \"message\":\n          formErrors.message = value.length < 10 ? \"minimum 10 characaters required\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      });\n    };\n\n    this.state = {\n      firstName: null,\n      lastName: null,\n      email: null,\n      message: null,\n      formErrors: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        message: \"\"\n      },\n      success: false\n    };\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Email Me\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(\"input\", {\n      className: formErrors.firstName.length > 0 ? \"error\" : null,\n      placeholder: \"First Name\",\n      type: \"text\",\n      name: \"firstName\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), formErrors.firstName.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, formErrors.firstName)), React.createElement(\"div\", {\n      className: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(\"input\", {\n      className: formErrors.lastName.length > 0 ? \"error\" : null,\n      placeholder: \"Last Name\",\n      type: \"text\",\n      name: \"lastName\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), formErrors.lastName.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, formErrors.lastName)), React.createElement(\"div\", {\n      className: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Your Email\"), React.createElement(\"input\", {\n      className: formErrors.email.length > 0 ? \"error\" : null,\n      placeholder: \"Your Email\",\n      type: \"email\",\n      name: \"email\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, formErrors.email)), React.createElement(\"div\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Message\"), React.createElement(\"textarea\", {\n      className: formErrors.message.length > 0 ? \"error\" : null,\n      placeholder: \"Message\",\n      type: \"message\",\n      name: \"message\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), formErrors.message.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, formErrors.message)), React.createElement(\"div\", {\n      className: \"sendEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: this.state.success,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, !this.state.success ? 'Send Email' : 'Submitted!'))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/carloscarrasquillo/Documents/Documents/code/hackathon/swamphacks_2020/website/client/src/components/EmergencyForm/EmergencyForm.js"],"names":["React","Component","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","App","constructor","props","handleSubmit","e","preventDefault","state","console","log","SendEmail","sendEmail","firstName","concat","lastName","email","message","setState","success","error","handleChange","name","value","target","test","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./EmergencyForm.css\";\n\n/* Using Tutorial: https://www.youtube.com/watch?v=4CeTFW4agRw by Brice Ayres*/\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = ({ formErrors, ...rest }) => {\n    let valid = true;\n    // validate form errors being empty\n    Object.values(formErrors).forEach(val => {\n      val.length > 0 && (valid = false);\n    });\n    // validate the form was filled out\n    Object.values(rest).forEach(val => {\n      val === null && (valid = false);\n    });\n    return valid;\n};\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  firstName:  null,\n                        lastName:   null,\n                        email:      null,\n                        message:    null,\n                        formErrors: { firstName: \"\", lastName: \"\", email: \"\", message: \"\" },\n                        success:    false\n                     };\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        if (formValid(this.state)) {\n            console.log('--Submitting--');\n            SendEmail.sendEmail(this.state.firstName.concat(\" \", this.state.lastName),\n                                this.state.email,\n                                this.state.message\n                               )\n            this.setState({success: true});\n        }\n        else {\n          console.error(\"Invalid Form\");\n        }\n    };\n\n    handleChange = e => {\n        e.preventDefault();\n        const { name, value } = e.target;\n        let formErrors = { ...this.state.formErrors };\n\n        switch (name) {\n            case \"firstName\":\n                formErrors.firstName = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n            break;\n            case \"lastName\":\n                formErrors.lastName = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n            break;\n            case \"email\":\n                formErrors.email = emailRegex.test(value) ? \"\" : \"invalid email address\";\n            break;\n            case \"message\":\n                formErrors.message = value.length < 10 ? \"minimum 10 characaters required\" : \"\";\n            break;\n            default:\n            break;\n        }\n        this.setState({ formErrors, [name]: value });\n    };\n\n    render() {\n        const { formErrors } = this.state;\n        return (\n            <div className=\"form-wrapper\">\n                <h1>Email Me</h1>\n                <form onSubmit={this.handleSubmit} noValidate>\n\n                    <div className=\"firstName\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input className={formErrors.firstName.length > 0 ? \"error\" : null}\n                               placeholder=\"First Name\"\n                               type=\"text\"\n                               name=\"firstName\"\n                               noValidate\n                               onChange={this.handleChange}/>\n                        {formErrors.firstName.length > 0 && (\n                            <span className=\"errorMessage\">{formErrors.firstName}</span>\n                        )}\n                    </div>\n\n                    <div className=\"lastName\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input className={formErrors.lastName.length > 0 ? \"error\" : null}\n                               placeholder=\"Last Name\"\n                               type=\"text\"\n                               name=\"lastName\"\n                               noValidate\n                               onChange={this.handleChange}/>\n                        {formErrors.lastName.length > 0 && (\n                            <span className=\"errorMessage\">{formErrors.lastName}</span>\n                        )}\n                    </div>\n\n                    <div className=\"email\">\n                        <label htmlFor=\"email\">Your Email</label>\n                        <input className={formErrors.email.length > 0 ? \"error\" : null}\n                               placeholder=\"Your Email\"\n                               type=\"email\"\n                               name=\"email\"\n                               noValidate\n                               onChange={this.handleChange}/>\n                        {formErrors.email.length > 0 && (\n                            <span className=\"errorMessage\">{formErrors.email}</span>\n                        )}\n                    </div>\n\n                    <div className=\"message\">\n                        <label htmlFor=\"message\">Message</label>\n                        <textarea className={formErrors.message.length > 0 ? \"error\" : null}\n                               placeholder=\"Message\"\n                               type=\"message\"\n                               name=\"message\"\n                               noValidate\n                               onChange={this.handleChange}/>\n                        {formErrors.message.length > 0 && (\n                            <span className=\"errorMessage\">{formErrors.message}</span>\n                        )}\n                    </div>\n\n                    <div className=\"sendEmail\">\n                        <button type=\"submit\" disabled={this.state.success}>\n                            { !this.state.success ? 'Send Email' : 'Submitted!'}\n                        </button>\n                    </div>\n\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}